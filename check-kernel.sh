echo "### Verify Common Kernel Parameters" > "$(hostname -s)_kernel_parameter.txt"
echo $HOSTNAME >> "$(hostname -s)_kernel_parameter.txt"
echo "### Today is $(date)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Ref. https://www.ateam-oracle.com/tcpip-tuning" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Ref. http://www.linux-admins.net/2010/09/linux-tcp-tuning.html" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Ref. https://wwwx.cs.unc.edu/~sparkst/howto/network_tuning.php" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Ref. http://www.tweaked.io/guide/kernel/" >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 1.Verify TCP Common" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend net.ipv4.tcp_timestamps = 1" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend net.ipv4.tcp_window_scaling = 1" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend net.ipv4.tcp_sack = 1" >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_timestamps >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_window_scaling >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_sack >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 2.Verify TCP Time Wait" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Allow reuse of sockets in TIME_WAIT state for new connections(tcp_tw_reuse = 1)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend net.ipv4.tcp_tw_reuse = 0" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Enables fast recycling of TIME_WAIT sockets(tcp_tw_recycle = 1)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend net.ipv4.tcp_tw_recycle = 0  *** =1 DO NOT USE in SNAT Topology" >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_tw_reuse >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_tw_recycle >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 3.Verify Timeout" >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_fin_timeout >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_keepalive_time >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 4.Verify Rx Buffer Core/ipv4.tcp" >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.core.rmem_default >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.core.rmem_max >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_rmem >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_mem >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 5.Verify Tx Buffer  Core/ipv4.tcp" >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.core.wmem_default >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.core.wmem_max >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_wmem >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_mem >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 6.Verify Incoming connections backlog queue is the number of packets queued" >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.core.netdev_max_backlog >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_max_syn_backlog >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.ipv4.tcp_syncookies >> "$(hostname -s)_kernel_parameter.txt"
sysctl net.core.somaxconn >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 7.Verify Virtual Memory" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend vm.swappiness = 10 (default 60) (% of the free memory before activating swap)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Optional vm.vfs_cache_pressure = 50 (default 100)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Optional vm.min_free_kbytes = 67584 (default 67584,for Machine > 8GB Memory set to 131,072)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Reserve Free Memory for resistant against OOM scenarios" >> "$(hostname -s)_kernel_parameter.txt"
echo "### OOM : Out of memory( Setting between 67,584(<4GB Mem) - 131,072(<8GB Mem)) don't set to high" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend vm.dirty_background_ratio = 10 (lower limit)" >> "$(hostname -s)_kernel_parameter.txt"
echo "### Recommend vm.dirty_ratio = 15 (upper limit)" >> "$(hostname -s)_kernel_parameter.txt"
sysctl vm.swappiness >> "$(hostname -s)_kernel_parameter.txt"
sysctl vm.vfs_cache_pressure >> "$(hostname -s)_kernel_parameter.txt"
sysctl vm.min_free_kbytes >> "$(hostname -s)_kernel_parameter.txt"
sysctl vm.dirty_background_ratio >> "$(hostname -s)_kernel_parameter.txt"
sysctl vm.dirty_ratio >> "$(hostname -s)_kernel_parameter.txt"
sysctl vm.max_map_count >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 8.Verify File Descriptors" >> "$(hostname -s)_kernel_parameter.txt"
echo "### fs.file-max set to 10% of RAM / 1 fd ~ 1kB" >> "$(hostname -s)_kernel_parameter.txt"
echo "### fs.nr_open / default : 1024 x 1204 = 1048576" >> "$(hostname -s)_kernel_parameter.txt"
sysctl fs.file-max >> "$(hostname -s)_kernel_parameter.txt"
sysctl fs.file-nr >> "$(hostname -s)_kernel_parameter.txt"
sysctl fs.nr_open >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"

echo "### 9.Verify Shared Memory" >> "$(hostname -s)_kernel_parameter.txt"
sysctl kernel.shmall >> "$(hostname -s)_kernel_parameter.txt"
sysctl kernel.shmmax >> "$(hostname -s)_kernel_parameter.txt"
sysctl kernel.shmmni >> "$(hostname -s)_kernel_parameter.txt"
sysctl kernel.sem >> "$(hostname -s)_kernel_parameter.txt"
echo "" >> "$(hostname -s)_kernel_parameter.txt"
